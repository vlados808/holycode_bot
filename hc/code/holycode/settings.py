"""
Django settings for holycode project.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from datetime import time
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-z2y2sc362e=+$ozn7)!5dmv6k03b9^+#+e@z%dmjcr9pf95mha'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'constance',
    'benchmark.apps.BenchmarkConfig',
    'django_admin_listfilter_dropdown',
    'django_json_widget',
    'django_tgbot',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'constance.backends.database',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'holycode.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'holycode.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'postgres',
        # 'PASSWORD': 'postgres',
        'PASSWORD': 'y^Jk50z8PTQS',
        # 'HOST': '0.0.0.0',
        'HOST': os.getenv('PG_HOST', '0.0.0.0'),
        # 'PORT': '5432',
        'PORT': '15432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

BOT_URL = os.getenv('BOT_URL', 'http://0.0.0.0:8080/')
CHANNEL_URL = 'https://t.me/c/1875910106/'

DEFAULT_INSTRUCTION = [
    {
        "name": "type",
        "type": "type",
        "required": True,
    },
    {
        "name": "grade",
        "type": "grade"
    },
    {
        "name": "project",
        "reg": "(?<=Проект: ).*"
    },
    {
        "name": "requirements",
        "reg": "(?<=Требования:\\n)[\\s\\S]*?(?=^\\n)"
    },
    {
        "name": "tasks",
        "reg": "(?<=\\(подробности и детали проектов - на техническом интервью\\):\\n)[\\s\\S]*?(?=^\\n)"
    },
    {
        "name": "location",
        "reg": "(?<=Локация: ).*"
    },
    {
        "name": "project_term",
        "reg": "(?<=Длительность: ).*"
    },
    {
        "name": "project_term",
        "reg": "(?<=Срок привлечения ).*"
    },
    {
        "name": "rate",
        "reg": "(?<=Рейт: )\\d+",
        "type": "int"
    }
]

CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'

CONSTANCE_CONFIG = {
    'GS_PARSING_TIME': (time(11, 0), 'время запуска парсинга табличных источников', time),
    # 'GS_PARSING_TIME': (time(9, 10), 'время запуска парсинга табличных источников', time),
    'DIGEST_1_TIME': (time(11, 15), 'время публикации утреннего дайджеста', time),
    'DIGEST_2_TIME': (time(16, 00), 'время публикации вечернего дайджеста', time),
}
